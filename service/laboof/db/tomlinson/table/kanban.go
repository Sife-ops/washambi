//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Kanban = newKanbanTable("tomlinson", "kanban", "")

type kanbanTable struct {
	postgres.Table

	// Columns
	ID        postgres.ColumnString
	Name      postgres.ColumnString
	CreatedAt postgres.ColumnTimestamp
	UpdatedAt postgres.ColumnTimestamp
	DeletedAt postgres.ColumnTimestamp

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type KanbanTable struct {
	kanbanTable

	EXCLUDED kanbanTable
}

// AS creates new KanbanTable with assigned alias
func (a KanbanTable) AS(alias string) *KanbanTable {
	return newKanbanTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new KanbanTable with assigned schema name
func (a KanbanTable) FromSchema(schemaName string) *KanbanTable {
	return newKanbanTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new KanbanTable with assigned table prefix
func (a KanbanTable) WithPrefix(prefix string) *KanbanTable {
	return newKanbanTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new KanbanTable with assigned table suffix
func (a KanbanTable) WithSuffix(suffix string) *KanbanTable {
	return newKanbanTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newKanbanTable(schemaName, tableName, alias string) *KanbanTable {
	return &KanbanTable{
		kanbanTable: newKanbanTableImpl(schemaName, tableName, alias),
		EXCLUDED:    newKanbanTableImpl("", "excluded", ""),
	}
}

func newKanbanTableImpl(schemaName, tableName, alias string) kanbanTable {
	var (
		IDColumn        = postgres.StringColumn("id")
		NameColumn      = postgres.StringColumn("name")
		CreatedAtColumn = postgres.TimestampColumn("created_at")
		UpdatedAtColumn = postgres.TimestampColumn("updated_at")
		DeletedAtColumn = postgres.TimestampColumn("deleted_at")
		allColumns      = postgres.ColumnList{IDColumn, NameColumn, CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn}
		mutableColumns  = postgres.ColumnList{NameColumn, CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn}
	)

	return kanbanTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		Name:      NameColumn,
		CreatedAt: CreatedAtColumn,
		UpdatedAt: UpdatedAtColumn,
		DeletedAt: DeletedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
